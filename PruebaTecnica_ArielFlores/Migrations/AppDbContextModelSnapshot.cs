// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PruebaTecnica_ArielFlores.Context;

#nullable disable

namespace PruebaTecnica_ArielFlores.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("PruebaTecnica_ArielFlores.Models.Entidades.Clientes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Ingresos")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("clientes");
                });

            modelBuilder.Entity("PruebaTecnica_ArielFlores.Models.Entidades.Cuentas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClientesId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NumeroCuenta")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClientesId");

                    b.HasIndex("NumeroCuenta")
                        .IsUnique();

                    b.ToTable("cuentas");
                });

            modelBuilder.Entity("PruebaTecnica_ArielFlores.Models.Entidades.Transacciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CuentasId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Monto")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("SaldoAnterior")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("SaldoNuevo")
                        .HasColumnType("TEXT");

                    b.Property<string>("TipoTransaccion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CuentasId");

                    b.ToTable("Transacciones");
                });

            modelBuilder.Entity("PruebaTecnica_ArielFlores.Models.Entidades.Cuentas", b =>
                {
                    b.HasOne("PruebaTecnica_ArielFlores.Models.Entidades.Clientes", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClientesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("PruebaTecnica_ArielFlores.Models.Entidades.Transacciones", b =>
                {
                    b.HasOne("PruebaTecnica_ArielFlores.Models.Entidades.Cuentas", "Cuentas")
                        .WithMany()
                        .HasForeignKey("CuentasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cuentas");
                });
#pragma warning restore 612, 618
        }
    }
}
